Для этой игры нам нужно, чтобы игрок (человек) мог каким-то образом вводить 
в программу свои ответы. Один из способов это сделать —
открывать диалоговое окно (в JavaScript оно называется prompt), в котором 
игрок может что-нибудь напечатать. 
______________________________________________________________________________________

Если мы нажмем "отмена" в prompt, то
В данном случае console.log печатает null как строку. Вообще-то
null строкой не является, но, поскольку в консоль можно выводить
только строки и вы попросили JavaScript напечатать "Привет, " + null,
JavaScript преобразовал null в строку "null", чтобы напечатать это
значение. Ситуация, когда JavaScript автоматически преобразует значение
к другому типу, называется НЕЯВНЫМ ПРИВЕДЕНИЕМ ТИПА

Неявное приведение типа — пример того, как JavaScript старается быть
умным. Способа объединить строку и null не существует, и JavaScript делает
лучшее, на что он способен. В данном случае он знает, что для успешного
выполнения операции нужны две строки. Строковая версия значения null —
это "null", и в результате мы видим в консоли "Привет, null".

______________________________________________________________________________________
Чем alert лучше console.log?
Зачем нужен диалог alert, когда есть console.log?
Во-первых, если необходимо просто сообщить о чем-то
игроку, alert позволяет сделать именно это — не требуя, чтобы игрок открыл консоль и прочитал сообщение.
Во-вторых, вызов alert (а также prompt и confirm)
приостанавливает работу интерпретатора JavaScript
до нажатия кнопки «ОК» (или «Отмена», в случае
prompt) и — значит, у пользователя будет достаточно
времени, чтобы прочитать сообщение. А при использовании console.log текст отображается в консоли,
а интерпретатор тут же переходит к следующей строке
программы.
______________________________________________________________________________________
Используем псевдокод для проектирования игры
Псевдокод — удобный инструмент, который программисты часто
используют при проектировании программ. Слово «псевдокод» означает
«ненастоящий код». Хотя в псевдокоде есть циклы и условия, в целом
программа описывается обычным человеческим языком. Чтобы разобраться, что это значит, давайте посмотрим на описание нашей игры
в псевдокоде:

Выбрать случайное слово
Пока слово не угадано {
 Показать игроку текущее состояние игры
 Запросить у игрока вариант ответа
 Если игрок хочет выйти из игры {
 Выйти из игры
 }
 Иначе Если вариант ответа — не одиночная буква {
 Сообщить игроку, что он должен ввести букву
 }
 Иначе {
 Если такая буква есть в слове {
 Обновить состояние игры, подставив новую букву
 }
 }
}
Поздравить игрока с победой — слово угадано
______________________________________________________________________________________
Программируем игровой цикл

Основа игрового цикла выглядит так:
while (remainingLetters > 0) {
 // Основной код
 // Показываем состояние игры
 // Запрашиваем вариант ответа
 // Обновляем answerArray и remainingLetters для каждого
 // вхождения угаданной буквы
}

Мы используем цикл while, который будет повторяться
до тех пор, пока условие remainingLetters > 0 дает true.
В теле цикла надо будет обновлять remainingLetters
для каждого правильного ответа игрока; когда игрок угадает все буквы, remainingLetters примет значение 0,
и цикл завершится.
Далее мы рассмотрим код, составляющий тело игрового цикла.

Ключевое слово break можно использовать для немедленного выхода
из любого цикла, независимо от того, где именно внутри цикла это происходит, или от того, 
выполняется ли на этот момент условие while
______________________________________________________________________________________