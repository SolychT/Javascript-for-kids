1)Теперь давайте писать JavaScript-код игры. Первая
наша задача — выбрать на карте случайное место для
клада. Поскольку размер карты 400 × 400 пикселей,
координаты ее верхнего левого угла равны { x: 0,
y: 0 }, а координаты нижнего правого угла — { x: 399,
y: 399 }.

2)Теперь используем функцию getRandomNumber для задания координат
клада:
Во фрагменте кода начиная со строки  задаются переменные width
и height, соответствующие ширине и высоте элемента img, который мы
используем в качестве карты. В строке  мы создали объект под 
названием target с двумя свойствами x и y, обозначающими координаты
клада. Значения x и y мы получаем из функции getRandomNumber.
Каждый раз при запуске этого кода мы получим новую случайную
позицию на карте и координаты этой позиции будут сохранены в свойствах 
x и y переменной target.

3)Обработчик кликов
Сначала мы используем $("#map"), чтобы найти карту (поскольку
"map" — это id элемента img), а затем указываем обработчик кликов.
Всякий раз, когда игрок кликнет по карте, начнется выполнение тела
функции между фигурных скобок. Информация о клике будет передана
в функцию через аргумент event.
В обработчике нужно выполнить несколько действий: увеличить
счетчик кликов, вычислить, насколько точка клика отстоит от 
координат клада, и отобразить сообщения. Перед тем как писать 
код обработчика, мы создадим переменные и функции, которые помогут 
нам запрограммировать нужные действия.

4)Подсчёт кликов
Первое, что должен делать обработчик, — отслеживать число кликов.
Для этого нам понадобится переменная clicks, которую мы создадим
в начале программы (за пределами кода обработчика) и присвоим ей
значение 0
В код обработчика кликов мы включим команду clicks++, чтобы
увеличивать счетчик каждый раз, когда игрок кликнет по карте.

5)Вычисляем расстояние от клика до клада
Функция getDistance принимает
два аргумента: event и target. Объект
event — тот же самый, что передается
обработчику кликов, и в нем содержится
информация о событии. В частности, это
свойства offsetX и offsetY, хранящие
x- и y-координаты клика — как раз они
нам и нужны.
В коде функции переменная diffX
хранит горизонтальное расстояние между
кликом и кладом, которое мы получаем,
вычитая target.x (x-координата клада)
из event.offsetX (x-координата клика).
Тем же образом мы находим вертикальное
расстояние, сохраняя его в переменной
diffY.

6)Теорема Пифагора
И наконец, чтобы найти расстояние между двумя
точками в коде функции getDistance, используется 
теорема Пифагора. 

7)Как видите, сначала мы вызываем getDistance, 
сохраняя возвращенное значение в переменной distance. 
Затем мы передаем distance
в функцию getDistanceHint, чтобы получить соответствующую
строку подсказки и сохранить ее в переменной distanceHint.
Код $("#distance").text(distanceHint); находит элемент, id
которого равен "distance" (в нашем случае это элемент p), и меняет его
текст на значение distanceHint, так что всякий раз при клике по карте
наша веб-страничка сообщает игроку, насколько близко он подошел к цели.

8)Проверка на выигрыш
И наконец, наш обработчик кликов должен проверить, не попал ли игрок
в цель. Поскольку один пиксель очень мал, мы не будем вынуждать
игрока кликать в точности по месту с кладом, а засчитаем за победу клик
на расстоянии менее восьми пикселей.
